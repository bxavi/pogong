# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      CONTAINER_DB: postgres
    services:
      pogong:
        image: postgres:15.2-alpine
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: root
          POSTGRES_DB: pogong
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name postgres
        volumes:
          - ${{ github.workspace }}/pg:/pg
        ports:
          - 5432:5432


    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
      
    - name: Install Docker CLI
      uses: actions-hub/docker/cli@master
      env:
          SKIP_LOGIN: true
      
    - run: ls ${{ github.workspace }}/pg
    - run: docker exec ${{ env.CONTAINER_DB }} ls pg

    - name: Restore DB
      run: make restoredb
        
    - name: Test
      run: make test
